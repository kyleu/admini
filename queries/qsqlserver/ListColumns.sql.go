// Code generated by qtc from "ListColumns.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// --

//line queries/qsqlserver/ListColumns.sql:1
package qsqlserver

//line queries/qsqlserver/ListColumns.sql:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/qsqlserver/ListColumns.sql:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/qsqlserver/ListColumns.sql:1
func StreamListColumns(qw422016 *qt422016.Writer, schema string) {
//line queries/qsqlserver/ListColumns.sql:1
	qw422016.N().S(`
select
  schema_name(tab.schema_id) as schema_name,
  tab.name as table_name,
  col.column_id,
  col.name as column_name,
  t.name as data_type,
  col.max_length,
  col.precision,
  col.is_nullable
from
  sys.tables as tab
    inner join sys.columns as col on tab.object_id = col.object_id
    left join sys.types as t on col.user_type_id = t.user_type_id
order by schema_name, table_name, column_id;
-- `)
//line queries/qsqlserver/ListColumns.sql:16
}

//line queries/qsqlserver/ListColumns.sql:16
func WriteListColumns(qq422016 qtio422016.Writer, schema string) {
//line queries/qsqlserver/ListColumns.sql:16
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/qsqlserver/ListColumns.sql:16
	StreamListColumns(qw422016, schema)
//line queries/qsqlserver/ListColumns.sql:16
	qt422016.ReleaseWriter(qw422016)
//line queries/qsqlserver/ListColumns.sql:16
}

//line queries/qsqlserver/ListColumns.sql:16
func ListColumns(schema string) string {
//line queries/qsqlserver/ListColumns.sql:16
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/qsqlserver/ListColumns.sql:16
	WriteListColumns(qb422016, schema)
//line queries/qsqlserver/ListColumns.sql:16
	qs422016 := string(qb422016.B)
//line queries/qsqlserver/ListColumns.sql:16
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/qsqlserver/ListColumns.sql:16
	return qs422016
//line queries/qsqlserver/ListColumns.sql:16
}
