// Code generated by qtc from "ListColumns.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// --

//line queries/qsqlite/ListColumns.sql:1
package qsqlite

//line queries/qsqlite/ListColumns.sql:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line queries/qsqlite/ListColumns.sql:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line queries/qsqlite/ListColumns.sql:1
func StreamListColumns(qw422016 *qt422016.Writer, schema string) {
//line queries/qsqlite/ListColumns.sql:1
	qw422016.N().S(`
select
  m.name as "xn",
  p.cid as "i",
  p.name as "n",
  p.type as "t",
  p.pk as "pk",
  p.dflt_value as "dv",
  p."notnull" as "nn"
from
  sqlite_master m
  left outer join pragma_table_info(m.name) p on m.name <> p.name
where
  m.type in ('table', 'view')
order by
  xn, i
;

-- `)
//line queries/qsqlite/ListColumns.sql:19
}

//line queries/qsqlite/ListColumns.sql:19
func WriteListColumns(qq422016 qtio422016.Writer, schema string) {
//line queries/qsqlite/ListColumns.sql:19
	qw422016 := qt422016.AcquireWriter(qq422016)
//line queries/qsqlite/ListColumns.sql:19
	StreamListColumns(qw422016, schema)
//line queries/qsqlite/ListColumns.sql:19
	qt422016.ReleaseWriter(qw422016)
//line queries/qsqlite/ListColumns.sql:19
}

//line queries/qsqlite/ListColumns.sql:19
func ListColumns(schema string) string {
//line queries/qsqlite/ListColumns.sql:19
	qb422016 := qt422016.AcquireByteBuffer()
//line queries/qsqlite/ListColumns.sql:19
	WriteListColumns(qb422016, schema)
//line queries/qsqlite/ListColumns.sql:19
	qs422016 := string(qb422016.B)
//line queries/qsqlite/ListColumns.sql:19
	qt422016.ReleaseByteBuffer(qb422016)
//line queries/qsqlite/ListColumns.sql:19
	return qs422016
//line queries/qsqlite/ListColumns.sql:19
}
