// Code generated by qtc from "Testbed.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- $PF_IGNORE$ -->

//line views/vsandbox/Testbed.html:2
package vsandbox

//line views/vsandbox/Testbed.html:2
import (
	"github.com/kyleu/admini/app"
	"github.com/kyleu/admini/app/controller/cutil"
	"github.com/kyleu/admini/app/result"
	"github.com/kyleu/admini/app/schema"
	"github.com/kyleu/admini/app/util"
	"github.com/kyleu/admini/queries/qsqlite"
	"github.com/kyleu/admini/views/components"
	"github.com/kyleu/admini/views/layout"
	"github.com/kyleu/admini/views/vresult"
)

//line views/vsandbox/Testbed.html:14
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vsandbox/Testbed.html:14
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vsandbox/Testbed.html:14
type Testbed struct{ layout.Basic }

//line views/vsandbox/Testbed.html:16
func (p *Testbed) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:16
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:17
	streamicons(qw422016, as, ps)
//line views/vsandbox/Testbed.html:17
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:18
	streamtabs(qw422016, as, ps)
//line views/vsandbox/Testbed.html:18
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:19
	streamaccordion(qw422016, as, ps)
//line views/vsandbox/Testbed.html:19
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:20
	streammodal(qw422016, as, ps)
//line views/vsandbox/Testbed.html:20
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:21
	data := ps.Data.(util.ValueMap)

//line views/vsandbox/Testbed.html:22
	if len(data) > 0 {
//line views/vsandbox/Testbed.html:22
		streamdb(qw422016, as, ps)
//line views/vsandbox/Testbed.html:22
	}
//line views/vsandbox/Testbed.html:22
	qw422016.N().S(`
`)
//line views/vsandbox/Testbed.html:23
}

//line views/vsandbox/Testbed.html:23
func (p *Testbed) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:23
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:23
	p.StreamBody(qw422016, as, ps)
//line views/vsandbox/Testbed.html:23
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:23
}

//line views/vsandbox/Testbed.html:23
func (p *Testbed) Body(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:23
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:23
	p.WriteBody(qb422016, as, ps)
//line views/vsandbox/Testbed.html:23
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:23
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:23
	return qs422016
//line views/vsandbox/Testbed.html:23
}

//line views/vsandbox/Testbed.html:25
func streamicons(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:25
	qw422016.N().S(`  <div class="card">
    <h3>SVG Icons</h3>
    `)
//line views/vsandbox/Testbed.html:28
	components.StreamIconGallery(qw422016, as, ps)
//line views/vsandbox/Testbed.html:28
	qw422016.N().S(`
  </div>
`)
//line views/vsandbox/Testbed.html:30
}

//line views/vsandbox/Testbed.html:30
func writeicons(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:30
	streamicons(qw422016, as, ps)
//line views/vsandbox/Testbed.html:30
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:30
}

//line views/vsandbox/Testbed.html:30
func icons(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:30
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:30
	writeicons(qb422016, as, ps)
//line views/vsandbox/Testbed.html:30
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:30
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:30
	return qs422016
//line views/vsandbox/Testbed.html:30
}

//line views/vsandbox/Testbed.html:32
func streamtabs(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:32
	qw422016.N().S(`  <div class="card">
    <h3>Tabs</h3>
    <div class="tabs">
`)
//line views/vsandbox/Testbed.html:36
	for _, o := range schema.AllOrigins {
//line views/vsandbox/Testbed.html:36
		qw422016.N().S(`      <input name="type" type="radio" id="sandbox-`)
//line views/vsandbox/Testbed.html:37
		qw422016.E().S(o.Key)
//line views/vsandbox/Testbed.html:37
		qw422016.N().S(`" class="input"/>
      <label for="sandbox-`)
//line views/vsandbox/Testbed.html:38
		qw422016.E().S(o.Key)
//line views/vsandbox/Testbed.html:38
		qw422016.N().S(`" class="label">`)
//line views/vsandbox/Testbed.html:38
		qw422016.E().S(o.Title)
//line views/vsandbox/Testbed.html:38
		qw422016.N().S(`</label>
      <div class="panel"><p>`)
//line views/vsandbox/Testbed.html:39
		qw422016.E().S(o.Description)
//line views/vsandbox/Testbed.html:39
		qw422016.N().S(`</p></div>
`)
//line views/vsandbox/Testbed.html:40
	}
//line views/vsandbox/Testbed.html:40
	qw422016.N().S(`    </div>
  </div>
`)
//line views/vsandbox/Testbed.html:43
}

//line views/vsandbox/Testbed.html:43
func writetabs(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:43
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:43
	streamtabs(qw422016, as, ps)
//line views/vsandbox/Testbed.html:43
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:43
}

//line views/vsandbox/Testbed.html:43
func tabs(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:43
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:43
	writetabs(qb422016, as, ps)
//line views/vsandbox/Testbed.html:43
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:43
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:43
	return qs422016
//line views/vsandbox/Testbed.html:43
}

//line views/vsandbox/Testbed.html:45
func streamaccordion(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:45
	qw422016.N().S(`  <div class="card">
    <h3>Accordion</h3>
    <ul class="accordion">
      <li>
        <input id="accordion-a" type="checkbox" hidden />
        <label for="accordion-a">`)
//line views/vsandbox/Testbed.html:51
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vsandbox/Testbed.html:51
	qw422016.N().S(` Option A</label>
        <div class="bd">Option A!</div>
      </li>
      <li>
        <input id="accordion-b" type="checkbox" hidden />
        <label for="accordion-b">`)
//line views/vsandbox/Testbed.html:56
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vsandbox/Testbed.html:56
	qw422016.N().S(` Option B</label>
        <div class="bd">Option B!</div>
      </li>
      <li>
        <input id="accordion-c" type="checkbox" hidden />
        <label for="accordion-c">`)
//line views/vsandbox/Testbed.html:61
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vsandbox/Testbed.html:61
	qw422016.N().S(` Option C</label>
        <div class="bd">Option C!</div>
      </li>
    </ul>
  </div>
`)
//line views/vsandbox/Testbed.html:66
}

//line views/vsandbox/Testbed.html:66
func writeaccordion(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:66
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:66
	streamaccordion(qw422016, as, ps)
//line views/vsandbox/Testbed.html:66
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:66
}

//line views/vsandbox/Testbed.html:66
func accordion(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:66
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:66
	writeaccordion(qb422016, as, ps)
//line views/vsandbox/Testbed.html:66
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:66
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:66
	return qs422016
//line views/vsandbox/Testbed.html:66
}

//line views/vsandbox/Testbed.html:68
func streammodal(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:68
	qw422016.N().S(`  <div class="card">
    <h3>Modal</h3>
    <div><a href="#modal-x">Open modal</a></div>
  </div>
  <div id="modal-x" class="modal" style="display: none;">
    <a class="backdrop" href="#"></a>
    <div class="modal-content">
      <div class="modal-header">
        <a href="#" class="modal-close">Ã—</a>
        <h2>Modal</h2>
      </div>
      <div class="modal-body">
        Here's a modal body!
      </div>
    </div>
  </div>
`)
//line views/vsandbox/Testbed.html:85
}

//line views/vsandbox/Testbed.html:85
func writemodal(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:85
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:85
	streammodal(qw422016, as, ps)
//line views/vsandbox/Testbed.html:85
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:85
}

//line views/vsandbox/Testbed.html:85
func modal(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:85
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:85
	writemodal(qb422016, as, ps)
//line views/vsandbox/Testbed.html:85
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:85
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:85
	return qs422016
//line views/vsandbox/Testbed.html:85
}

//line views/vsandbox/Testbed.html:87
func streamdb(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:88
	data := ps.Data.(util.ValueMap)

//line views/vsandbox/Testbed.html:88
	qw422016.N().S(`  <div class="card">
    <h3>Tables</h3>
    <pre>`)
//line views/vsandbox/Testbed.html:91
	qw422016.E().S(qsqlite.ListTables(""))
//line views/vsandbox/Testbed.html:91
	qw422016.N().S(`</pre>
    `)
//line views/vsandbox/Testbed.html:92
	vresult.StreamSimple(qw422016, data["tables"].(*result.Result), 3, as, ps)
//line views/vsandbox/Testbed.html:92
	qw422016.N().S(`
  </div>
  <div class="card">
    <h3>Columns</h3>
    <pre>`)
//line views/vsandbox/Testbed.html:96
	qw422016.E().S(qsqlite.ListColumns(""))
//line views/vsandbox/Testbed.html:96
	qw422016.N().S(`</pre>
    `)
//line views/vsandbox/Testbed.html:97
	vresult.StreamSimple(qw422016, data["columns"].(*result.Result), 3, as, ps)
//line views/vsandbox/Testbed.html:97
	qw422016.N().S(`
  </div>
  <div class="card">
    <h3>Indexes</h3>
    <pre>`)
//line views/vsandbox/Testbed.html:101
	qw422016.E().S(qsqlite.ListIndexes(""))
//line views/vsandbox/Testbed.html:101
	qw422016.N().S(`</pre>
    `)
//line views/vsandbox/Testbed.html:102
	vresult.StreamSimple(qw422016, data["indexes"].(*result.Result), 3, as, ps)
//line views/vsandbox/Testbed.html:102
	qw422016.N().S(`
  </div>
  <div class="card">
    <h3>Foreign Keys</h3>
    <pre>`)
//line views/vsandbox/Testbed.html:106
	qw422016.E().S(qsqlite.ListForeignKeys(""))
//line views/vsandbox/Testbed.html:106
	qw422016.N().S(`</pre>
    `)
//line views/vsandbox/Testbed.html:107
	vresult.StreamSimple(qw422016, data["fks"].(*result.Result), 3, as, ps)
//line views/vsandbox/Testbed.html:107
	qw422016.N().S(`
  </div>
`)
//line views/vsandbox/Testbed.html:109
}

//line views/vsandbox/Testbed.html:109
func writedb(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsandbox/Testbed.html:109
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsandbox/Testbed.html:109
	streamdb(qw422016, as, ps)
//line views/vsandbox/Testbed.html:109
	qt422016.ReleaseWriter(qw422016)
//line views/vsandbox/Testbed.html:109
}

//line views/vsandbox/Testbed.html:109
func db(as *app.State, ps *cutil.PageState) string {
//line views/vsandbox/Testbed.html:109
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsandbox/Testbed.html:109
	writedb(qb422016, as, ps)
//line views/vsandbox/Testbed.html:109
	qs422016 := string(qb422016.B)
//line views/vsandbox/Testbed.html:109
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsandbox/Testbed.html:109
	return qs422016
//line views/vsandbox/Testbed.html:109
}
