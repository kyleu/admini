// Code generated by qtc from "Form.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/components/Form.html:2
package components

//line views/components/Form.html:2
import (
	"strings"
	"time"

	"admini.dev/app/util"
	"admini.dev/views/vutil"
)

//line views/components/Form.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/components/Form.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/components/Form.html:10
func StreamFormInput(qw422016 *qt422016.Writer, key string, id string, value string, placeholder ...string) {
//line views/components/Form.html:11
	if id == "" {
//line views/components/Form.html:11
		qw422016.N().S(`<input name="`)
//line views/components/Form.html:12
		qw422016.E().S(key)
//line views/components/Form.html:12
		qw422016.N().S(`" value="`)
//line views/components/Form.html:12
		qw422016.E().S(value)
//line views/components/Form.html:12
		qw422016.N().S(`"`)
//line views/components/Form.html:12
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:12
		qw422016.N().S(`/>`)
//line views/components/Form.html:13
	} else {
//line views/components/Form.html:13
		qw422016.N().S(`<input id="`)
//line views/components/Form.html:14
		qw422016.E().S(id)
//line views/components/Form.html:14
		qw422016.N().S(`" name="`)
//line views/components/Form.html:14
		qw422016.E().S(key)
//line views/components/Form.html:14
		qw422016.N().S(`" value="`)
//line views/components/Form.html:14
		qw422016.E().S(value)
//line views/components/Form.html:14
		qw422016.N().S(`"`)
//line views/components/Form.html:14
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:14
		qw422016.N().S(`/>`)
//line views/components/Form.html:15
	}
//line views/components/Form.html:16
}

//line views/components/Form.html:16
func WriteFormInput(qq422016 qtio422016.Writer, key string, id string, value string, placeholder ...string) {
//line views/components/Form.html:16
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:16
	StreamFormInput(qw422016, key, id, value, placeholder...)
//line views/components/Form.html:16
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:16
}

//line views/components/Form.html:16
func FormInput(key string, id string, value string, placeholder ...string) string {
//line views/components/Form.html:16
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:16
	WriteFormInput(qb422016, key, id, value, placeholder...)
//line views/components/Form.html:16
	qs422016 := string(qb422016.B)
//line views/components/Form.html:16
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:16
	return qs422016
//line views/components/Form.html:16
}

//line views/components/Form.html:18
func StreamFormInputPassword(qw422016 *qt422016.Writer, key string, id string, value string, placeholder ...string) {
//line views/components/Form.html:19
	if id == "" {
//line views/components/Form.html:19
		qw422016.N().S(`<input name="`)
//line views/components/Form.html:20
		qw422016.E().S(key)
//line views/components/Form.html:20
		qw422016.N().S(`" type="password" value="`)
//line views/components/Form.html:20
		qw422016.E().S(value)
//line views/components/Form.html:20
		qw422016.N().S(`"`)
//line views/components/Form.html:20
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:20
		qw422016.N().S(`/>`)
//line views/components/Form.html:21
	} else {
//line views/components/Form.html:21
		qw422016.N().S(`<input id="`)
//line views/components/Form.html:22
		qw422016.E().S(id)
//line views/components/Form.html:22
		qw422016.N().S(`" name="`)
//line views/components/Form.html:22
		qw422016.E().S(key)
//line views/components/Form.html:22
		qw422016.N().S(`" type="password" value="`)
//line views/components/Form.html:22
		qw422016.E().S(value)
//line views/components/Form.html:22
		qw422016.N().S(`"`)
//line views/components/Form.html:22
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:22
		qw422016.N().S(`/>`)
//line views/components/Form.html:23
	}
//line views/components/Form.html:24
}

//line views/components/Form.html:24
func WriteFormInputPassword(qq422016 qtio422016.Writer, key string, id string, value string, placeholder ...string) {
//line views/components/Form.html:24
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:24
	StreamFormInputPassword(qw422016, key, id, value, placeholder...)
//line views/components/Form.html:24
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:24
}

//line views/components/Form.html:24
func FormInputPassword(key string, id string, value string, placeholder ...string) string {
//line views/components/Form.html:24
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:24
	WriteFormInputPassword(qb422016, key, id, value, placeholder...)
//line views/components/Form.html:24
	qs422016 := string(qb422016.B)
//line views/components/Form.html:24
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:24
	return qs422016
//line views/components/Form.html:24
}

//line views/components/Form.html:26
func StreamFormInputNumber(qw422016 *qt422016.Writer, key string, id string, value interface{}, placeholder ...string) {
//line views/components/Form.html:27
	if id == "" {
//line views/components/Form.html:27
		qw422016.N().S(`<input name="`)
//line views/components/Form.html:28
		qw422016.E().S(key)
//line views/components/Form.html:28
		qw422016.N().S(`" type="number" value="`)
//line views/components/Form.html:28
		qw422016.E().V(value)
//line views/components/Form.html:28
		qw422016.N().S(`"`)
//line views/components/Form.html:28
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:28
		qw422016.N().S(`/>`)
//line views/components/Form.html:29
	} else {
//line views/components/Form.html:29
		qw422016.N().S(`<input id="`)
//line views/components/Form.html:30
		qw422016.E().S(id)
//line views/components/Form.html:30
		qw422016.N().S(`" name="`)
//line views/components/Form.html:30
		qw422016.E().S(key)
//line views/components/Form.html:30
		qw422016.N().S(`" type="number" value="`)
//line views/components/Form.html:30
		qw422016.E().V(value)
//line views/components/Form.html:30
		qw422016.N().S(`"`)
//line views/components/Form.html:30
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:30
		qw422016.N().S(`/>`)
//line views/components/Form.html:31
	}
//line views/components/Form.html:32
}

//line views/components/Form.html:32
func WriteFormInputNumber(qq422016 qtio422016.Writer, key string, id string, value interface{}, placeholder ...string) {
//line views/components/Form.html:32
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:32
	StreamFormInputNumber(qw422016, key, id, value, placeholder...)
//line views/components/Form.html:32
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:32
}

//line views/components/Form.html:32
func FormInputNumber(key string, id string, value interface{}, placeholder ...string) string {
//line views/components/Form.html:32
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:32
	WriteFormInputNumber(qb422016, key, id, value, placeholder...)
//line views/components/Form.html:32
	qs422016 := string(qb422016.B)
//line views/components/Form.html:32
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:32
	return qs422016
//line views/components/Form.html:32
}

//line views/components/Form.html:34
func StreamFormInputTimestamp(qw422016 *qt422016.Writer, key string, id string, value *time.Time, placeholder ...string) {
//line views/components/Form.html:35
	if id == "" {
//line views/components/Form.html:35
		qw422016.N().S(`<input name="`)
//line views/components/Form.html:36
		qw422016.E().S(key)
//line views/components/Form.html:36
		qw422016.N().S(`" type="text" value="`)
//line views/components/Form.html:36
		qw422016.E().S(util.TimeToJS(value))
//line views/components/Form.html:36
		qw422016.N().S(`"`)
//line views/components/Form.html:36
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:36
		qw422016.N().S(`/>`)
//line views/components/Form.html:37
	} else {
//line views/components/Form.html:37
		qw422016.N().S(`<input id="`)
//line views/components/Form.html:38
		qw422016.E().S(id)
//line views/components/Form.html:38
		qw422016.N().S(`" name="`)
//line views/components/Form.html:38
		qw422016.E().S(key)
//line views/components/Form.html:38
		qw422016.N().S(`" type="text" value="`)
//line views/components/Form.html:38
		qw422016.E().S(util.TimeToFull(value))
//line views/components/Form.html:38
		qw422016.N().S(`"`)
//line views/components/Form.html:38
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:38
		qw422016.N().S(`/>`)
//line views/components/Form.html:39
	}
//line views/components/Form.html:40
}

//line views/components/Form.html:40
func WriteFormInputTimestamp(qq422016 qtio422016.Writer, key string, id string, value *time.Time, placeholder ...string) {
//line views/components/Form.html:40
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:40
	StreamFormInputTimestamp(qw422016, key, id, value, placeholder...)
//line views/components/Form.html:40
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:40
}

//line views/components/Form.html:40
func FormInputTimestamp(key string, id string, value *time.Time, placeholder ...string) string {
//line views/components/Form.html:40
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:40
	WriteFormInputTimestamp(qb422016, key, id, value, placeholder...)
//line views/components/Form.html:40
	qs422016 := string(qb422016.B)
//line views/components/Form.html:40
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:40
	return qs422016
//line views/components/Form.html:40
}

//line views/components/Form.html:42
func StreamFormTextarea(qw422016 *qt422016.Writer, key string, id string, rows int, value string, placeholder ...string) {
//line views/components/Form.html:43
	if id == "" {
//line views/components/Form.html:43
		qw422016.N().S(`<textarea rows="`)
//line views/components/Form.html:44
		qw422016.N().D(rows)
//line views/components/Form.html:44
		qw422016.N().S(`" name="`)
//line views/components/Form.html:44
		qw422016.E().S(key)
//line views/components/Form.html:44
		qw422016.N().S(`"`)
//line views/components/Form.html:44
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:44
		qw422016.N().S(`>`)
//line views/components/Form.html:44
		qw422016.E().S(value)
//line views/components/Form.html:44
		qw422016.N().S(`</textarea>`)
//line views/components/Form.html:45
	} else {
//line views/components/Form.html:45
		qw422016.N().S(`<textarea rows="`)
//line views/components/Form.html:46
		qw422016.N().D(rows)
//line views/components/Form.html:46
		qw422016.N().S(`" id="`)
//line views/components/Form.html:46
		qw422016.E().S(id)
//line views/components/Form.html:46
		qw422016.N().S(`" name="`)
//line views/components/Form.html:46
		qw422016.E().S(key)
//line views/components/Form.html:46
		qw422016.N().S(`"`)
//line views/components/Form.html:46
		streamphFor(qw422016, placeholder)
//line views/components/Form.html:46
		qw422016.N().S(`>`)
//line views/components/Form.html:46
		qw422016.E().S(value)
//line views/components/Form.html:46
		qw422016.N().S(`</textarea>`)
//line views/components/Form.html:47
	}
//line views/components/Form.html:48
}

//line views/components/Form.html:48
func WriteFormTextarea(qq422016 qtio422016.Writer, key string, id string, rows int, value string, placeholder ...string) {
//line views/components/Form.html:48
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:48
	StreamFormTextarea(qw422016, key, id, rows, value, placeholder...)
//line views/components/Form.html:48
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:48
}

//line views/components/Form.html:48
func FormTextarea(key string, id string, rows int, value string, placeholder ...string) string {
//line views/components/Form.html:48
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:48
	WriteFormTextarea(qb422016, key, id, rows, value, placeholder...)
//line views/components/Form.html:48
	qs422016 := string(qb422016.B)
//line views/components/Form.html:48
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:48
	return qs422016
//line views/components/Form.html:48
}

//line views/components/Form.html:50
func StreamFormSelect(qw422016 *qt422016.Writer, key string, id string, value string, opts []string, titles []string, indent int) {
//line views/components/Form.html:50
	qw422016.N().S(`<select name="`)
//line views/components/Form.html:51
	qw422016.E().S(key)
//line views/components/Form.html:51
	qw422016.N().S(`"`)
//line views/components/Form.html:51
	if id == `` {
//line views/components/Form.html:51
		qw422016.N().S(` `)
//line views/components/Form.html:51
		qw422016.N().S(`id="`)
//line views/components/Form.html:51
		qw422016.E().S(id)
//line views/components/Form.html:51
		qw422016.N().S(`"`)
//line views/components/Form.html:51
	}
//line views/components/Form.html:51
	qw422016.N().S(`>`)
//line views/components/Form.html:52
	for idx, opt := range opts {
//line views/components/Form.html:54
		title := opt
		if idx < len(titles) {
			title = titles[idx]
		}

//line views/components/Form.html:59
		vutil.StreamIndent(qw422016, true, indent+1)
//line views/components/Form.html:60
		if opt == value {
//line views/components/Form.html:60
			qw422016.N().S(`<option selected="selected" value="`)
//line views/components/Form.html:61
			qw422016.E().S(opt)
//line views/components/Form.html:61
			qw422016.N().S(`">`)
//line views/components/Form.html:61
			qw422016.E().S(title)
//line views/components/Form.html:61
			qw422016.N().S(`</option>`)
//line views/components/Form.html:62
		} else {
//line views/components/Form.html:62
			qw422016.N().S(`<option value="`)
//line views/components/Form.html:63
			qw422016.E().S(opt)
//line views/components/Form.html:63
			qw422016.N().S(`">`)
//line views/components/Form.html:63
			qw422016.E().S(title)
//line views/components/Form.html:63
			qw422016.N().S(`</option>`)
//line views/components/Form.html:64
		}
//line views/components/Form.html:65
	}
//line views/components/Form.html:66
	vutil.StreamIndent(qw422016, true, indent)
//line views/components/Form.html:66
	qw422016.N().S(`</select>`)
//line views/components/Form.html:68
}

//line views/components/Form.html:68
func WriteFormSelect(qq422016 qtio422016.Writer, key string, id string, value string, opts []string, titles []string, indent int) {
//line views/components/Form.html:68
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:68
	StreamFormSelect(qw422016, key, id, value, opts, titles, indent)
//line views/components/Form.html:68
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:68
}

//line views/components/Form.html:68
func FormSelect(key string, id string, value string, opts []string, titles []string, indent int) string {
//line views/components/Form.html:68
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:68
	WriteFormSelect(qb422016, key, id, value, opts, titles, indent)
//line views/components/Form.html:68
	qs422016 := string(qb422016.B)
//line views/components/Form.html:68
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:68
	return qs422016
//line views/components/Form.html:68
}

//line views/components/Form.html:70
func StreamFormRadio(qw422016 *qt422016.Writer, key string, value string, opts []string, titles []string, indent int) {
//line views/components/Form.html:71
	for idx, opt := range opts {
//line views/components/Form.html:73
		title := opt
		if idx < len(titles) {
			title = titles[idx]
		}

//line views/components/Form.html:78
		vutil.StreamIndent(qw422016, true, indent)
//line views/components/Form.html:79
		if opt == value {
//line views/components/Form.html:79
			qw422016.N().S(`<label class="radio-label"><input type="radio" name="`)
//line views/components/Form.html:80
			qw422016.E().S(key)
//line views/components/Form.html:80
			qw422016.N().S(`" value="`)
//line views/components/Form.html:80
			qw422016.E().S(opt)
//line views/components/Form.html:80
			qw422016.N().S(`" checked="checked" />`)
//line views/components/Form.html:80
			qw422016.N().S(` `)
//line views/components/Form.html:80
			qw422016.E().S(title)
//line views/components/Form.html:80
			qw422016.N().S(`</label>`)
//line views/components/Form.html:81
		} else {
//line views/components/Form.html:81
			qw422016.N().S(`<label class="radio-label"><input type="radio" name="`)
//line views/components/Form.html:82
			qw422016.E().S(key)
//line views/components/Form.html:82
			qw422016.N().S(`" value="`)
//line views/components/Form.html:82
			qw422016.E().S(opt)
//line views/components/Form.html:82
			qw422016.N().S(`" />`)
//line views/components/Form.html:82
			qw422016.N().S(` `)
//line views/components/Form.html:82
			qw422016.E().S(title)
//line views/components/Form.html:82
			qw422016.N().S(`</label>`)
//line views/components/Form.html:83
		}
//line views/components/Form.html:84
	}
//line views/components/Form.html:85
}

//line views/components/Form.html:85
func WriteFormRadio(qq422016 qtio422016.Writer, key string, value string, opts []string, titles []string, indent int) {
//line views/components/Form.html:85
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:85
	StreamFormRadio(qw422016, key, value, opts, titles, indent)
//line views/components/Form.html:85
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:85
}

//line views/components/Form.html:85
func FormRadio(key string, value string, opts []string, titles []string, indent int) string {
//line views/components/Form.html:85
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:85
	WriteFormRadio(qb422016, key, value, opts, titles, indent)
//line views/components/Form.html:85
	qs422016 := string(qb422016.B)
//line views/components/Form.html:85
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:85
	return qs422016
//line views/components/Form.html:85
}

//line views/components/Form.html:87
func StreamFormCheckbox(qw422016 *qt422016.Writer, key string, values []string, opts []string, titles []string, linebreaks bool, indent int) {
//line views/components/Form.html:88
	for idx, opt := range opts {
//line views/components/Form.html:90
		title := opt
		if idx < len(titles) {
			title = titles[idx]
		}

//line views/components/Form.html:95
		vutil.StreamIndent(qw422016, true, indent)
//line views/components/Form.html:96
		if util.StringArrayContains(values, opt) {
//line views/components/Form.html:96
			qw422016.N().S(`<label><input type="checkbox" name="`)
//line views/components/Form.html:97
			qw422016.E().S(key)
//line views/components/Form.html:97
			qw422016.N().S(`" value="`)
//line views/components/Form.html:97
			qw422016.E().S(opt)
//line views/components/Form.html:97
			qw422016.N().S(`" checked="checked" />`)
//line views/components/Form.html:97
			qw422016.N().S(` `)
//line views/components/Form.html:97
			qw422016.E().S(title)
//line views/components/Form.html:97
			qw422016.N().S(`</label>`)
//line views/components/Form.html:98
		} else {
//line views/components/Form.html:98
			qw422016.N().S(`<label><input type="checkbox" name="`)
//line views/components/Form.html:99
			qw422016.E().S(key)
//line views/components/Form.html:99
			qw422016.N().S(`" value="`)
//line views/components/Form.html:99
			qw422016.E().S(opt)
//line views/components/Form.html:99
			qw422016.N().S(`" />`)
//line views/components/Form.html:99
			qw422016.N().S(` `)
//line views/components/Form.html:99
			qw422016.E().S(title)
//line views/components/Form.html:99
			qw422016.N().S(`</label>`)
//line views/components/Form.html:100
		}
//line views/components/Form.html:101
		if util.StringArrayContains(values, opt) {
//line views/components/Form.html:101
			qw422016.N().S(`<br />`)
//line views/components/Form.html:103
		}
//line views/components/Form.html:104
	}
//line views/components/Form.html:105
}

//line views/components/Form.html:105
func WriteFormCheckbox(qq422016 qtio422016.Writer, key string, values []string, opts []string, titles []string, linebreaks bool, indent int) {
//line views/components/Form.html:105
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:105
	StreamFormCheckbox(qw422016, key, values, opts, titles, linebreaks, indent)
//line views/components/Form.html:105
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:105
}

//line views/components/Form.html:105
func FormCheckbox(key string, values []string, opts []string, titles []string, linebreaks bool, indent int) string {
//line views/components/Form.html:105
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:105
	WriteFormCheckbox(qb422016, key, values, opts, titles, linebreaks, indent)
//line views/components/Form.html:105
	qs422016 := string(qb422016.B)
//line views/components/Form.html:105
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:105
	return qs422016
//line views/components/Form.html:105
}

//line views/components/Form.html:107
func streamphFor(qw422016 *qt422016.Writer, phs []string) {
//line views/components/Form.html:108
	if len(phs) > 0 {
//line views/components/Form.html:108
		qw422016.N().S(` `)
//line views/components/Form.html:108
		qw422016.N().S(`placeholder="`)
//line views/components/Form.html:108
		qw422016.E().S(strings.Join(phs, "; "))
//line views/components/Form.html:108
		qw422016.N().S(`"`)
//line views/components/Form.html:108
	}
//line views/components/Form.html:109
}

//line views/components/Form.html:109
func writephFor(qq422016 qtio422016.Writer, phs []string) {
//line views/components/Form.html:109
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/Form.html:109
	streamphFor(qw422016, phs)
//line views/components/Form.html:109
	qt422016.ReleaseWriter(qw422016)
//line views/components/Form.html:109
}

//line views/components/Form.html:109
func phFor(phs []string) string {
//line views/components/Form.html:109
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/Form.html:109
	writephFor(qb422016, phs)
//line views/components/Form.html:109
	qs422016 := string(qb422016.B)
//line views/components/Form.html:109
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/Form.html:109
	return qs422016
//line views/components/Form.html:109
}
