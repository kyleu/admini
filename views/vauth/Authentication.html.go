// Code generated by qtc from "Authentication.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Code generated by Project Forge, see https://projectforge.dev for details. -->

//line views/vauth/Authentication.html:2
package vauth

//line views/vauth/Authentication.html:2
import (
	"github.com/kyleu/admini/app"
	"github.com/kyleu/admini/app/auth"
)

//line views/vauth/Authentication.html:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vauth/Authentication.html:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vauth/Authentication.html:7
func StreamAuthentication(qw422016 *qt422016.Writer, as *app.State) {
//line views/vauth/Authentication.html:7
	qw422016.N().S(`
`)
//line views/vauth/Authentication.html:9
	prvs, err := as.Auth.Providers()
	if err != nil {
		panic(err)
	}

//line views/vauth/Authentication.html:13
	qw422016.N().S(`  <div class="card">
    <div class="right"><a href="#modal-available"><button type="button">Available</button></a></div>
    <h3>Authentication</h3>
`)
//line views/vauth/Authentication.html:17
	if len(prvs) == 0 {
//line views/vauth/Authentication.html:17
		qw422016.N().S(`      <em>no authentication providers configured, why not <a href="#modal-available">add one</a>?</em>
`)
//line views/vauth/Authentication.html:19
	} else {
//line views/vauth/Authentication.html:19
		qw422016.N().S(`    <ul>
`)
//line views/vauth/Authentication.html:21
		for _, prv := range prvs {
//line views/vauth/Authentication.html:21
			qw422016.N().S(`      <li><a href="/auth/`)
//line views/vauth/Authentication.html:22
			qw422016.E().S(prv.ID)
//line views/vauth/Authentication.html:22
			qw422016.N().S(`?refer=`)
//line views/vauth/Authentication.html:22
			qw422016.N().U(`/admin/settings`)
//line views/vauth/Authentication.html:22
			qw422016.N().S(`">`)
//line views/vauth/Authentication.html:22
			qw422016.E().S(auth.AvailableProviderNames[prv.ID])
//line views/vauth/Authentication.html:22
			qw422016.N().S(`</a></li>
`)
//line views/vauth/Authentication.html:23
		}
//line views/vauth/Authentication.html:23
		qw422016.N().S(`    </ul>
`)
//line views/vauth/Authentication.html:25
	}
//line views/vauth/Authentication.html:25
	qw422016.N().S(`  </div>

  <div id="modal-available" class="modal" style="display: none;">
    <a class="backdrop" href="#"></a>
    <div class="modal-content">
      <div class="modal-header">
        <a href="#" class="modal-close">Ã—</a>
        <h2>Available Authentication Providers</h2>
      </div>
      <div class="modal-body">
        <ul>
`)
//line views/vauth/Authentication.html:37
	for _, x := range auth.AvailableProviderKeys {
//line views/vauth/Authentication.html:37
		qw422016.N().S(`          <li title="`)
//line views/vauth/Authentication.html:38
		qw422016.E().S(auth.ProviderUsage(x, prvs.Contains(x)))
//line views/vauth/Authentication.html:38
		qw422016.N().S(`">
`)
//line views/vauth/Authentication.html:39
		if prvs.Contains(x) {
//line views/vauth/Authentication.html:39
			qw422016.N().S(`            `)
//line views/vauth/Authentication.html:40
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vauth/Authentication.html:40
			qw422016.N().S(`
`)
//line views/vauth/Authentication.html:41
		} else {
//line views/vauth/Authentication.html:41
			qw422016.N().S(`            <em>`)
//line views/vauth/Authentication.html:42
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vauth/Authentication.html:42
			qw422016.N().S(`</em>
`)
//line views/vauth/Authentication.html:43
		}
//line views/vauth/Authentication.html:43
		qw422016.N().S(`          </li>
`)
//line views/vauth/Authentication.html:45
	}
//line views/vauth/Authentication.html:45
	qw422016.N().S(`        </ul>
      </div>
    </div>
  </div>
`)
//line views/vauth/Authentication.html:50
}

//line views/vauth/Authentication.html:50
func WriteAuthentication(qq422016 qtio422016.Writer, as *app.State) {
//line views/vauth/Authentication.html:50
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vauth/Authentication.html:50
	StreamAuthentication(qw422016, as)
//line views/vauth/Authentication.html:50
	qt422016.ReleaseWriter(qw422016)
//line views/vauth/Authentication.html:50
}

//line views/vauth/Authentication.html:50
func Authentication(as *app.State) string {
//line views/vauth/Authentication.html:50
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vauth/Authentication.html:50
	WriteAuthentication(qb422016, as)
//line views/vauth/Authentication.html:50
	qs422016 := string(qb422016.B)
//line views/vauth/Authentication.html:50
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vauth/Authentication.html:50
	return qs422016
//line views/vauth/Authentication.html:50
}
