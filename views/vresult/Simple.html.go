// Code generated by qtc from "Simple.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vresult/Simple.html:1
package vresult

//line views/vresult/Simple.html:1
import (
	"fmt"

	"admini.dev/admini/app"
	"admini.dev/admini/app/controller/cutil"
	"admini.dev/admini/app/lib/filter"
	"admini.dev/admini/app/lib/schema/field"
	"admini.dev/admini/app/result"
	"admini.dev/admini/app/util"
	"admini.dev/admini/views/components"
	"admini.dev/admini/views/components/fieldview"
	"admini.dev/admini/views/vutil"
)

//line views/vresult/Simple.html:15
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vresult/Simple.html:15
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vresult/Simple.html:15
func StreamSimple(qw422016 *qt422016.Writer, r *result.Result, indent int, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:15
	qw422016.N().S(`<div class="right">`)
//line views/vresult/Simple.html:16
	qw422016.E().S(util.StringPlural(len(r.Data), `row`))
//line views/vresult/Simple.html:16
	qw422016.N().S(`</div>`)
//line views/vresult/Simple.html:17
	vutil.StreamIndent(qw422016, true, indent)
//line views/vresult/Simple.html:17
	qw422016.N().S(`<h3>`)
//line views/vresult/Simple.html:18
	qw422016.E().S(r.Title)
//line views/vresult/Simple.html:18
	qw422016.N().S(`</h3>`)
//line views/vresult/Simple.html:19
	streamsimpleTable(qw422016, r, indent, false, nil, as, ps)
//line views/vresult/Simple.html:20
}

//line views/vresult/Simple.html:20
func WriteSimple(qq422016 qtio422016.Writer, r *result.Result, indent int, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:20
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vresult/Simple.html:20
	StreamSimple(qw422016, r, indent, as, ps)
//line views/vresult/Simple.html:20
	qt422016.ReleaseWriter(qw422016)
//line views/vresult/Simple.html:20
}

//line views/vresult/Simple.html:20
func Simple(r *result.Result, indent int, as *app.State, ps *cutil.PageState) string {
//line views/vresult/Simple.html:20
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vresult/Simple.html:20
	WriteSimple(qb422016, r, indent, as, ps)
//line views/vresult/Simple.html:20
	qs422016 := string(qb422016.B)
//line views/vresult/Simple.html:20
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vresult/Simple.html:20
	return qs422016
//line views/vresult/Simple.html:20
}

//line views/vresult/Simple.html:22
func streamsimpleTable(qw422016 *qt422016.Writer, r *result.Result, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:23
	vutil.StreamIndent(qw422016, true, indent)
//line views/vresult/Simple.html:23
	qw422016.N().S(`<table class="result-table">`)
//line views/vresult/Simple.html:25
	vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:25
	qw422016.N().S(`<thead>`)
//line views/vresult/Simple.html:27
	vutil.StreamIndent(qw422016, true, indent+2)
//line views/vresult/Simple.html:27
	qw422016.N().S(`<tr>`)
//line views/vresult/Simple.html:29
	if showNum {
//line views/vresult/Simple.html:30
		vutil.StreamIndent(qw422016, true, indent+3)
//line views/vresult/Simple.html:30
		qw422016.N().S(`<th class="no-padding"><div class="resize"></div></th>`)
//line views/vresult/Simple.html:32
	}
//line views/vresult/Simple.html:33
	for fIdx, field := range r.Fields {
//line views/vresult/Simple.html:34
		vutil.StreamIndent(qw422016, true, indent+3)
//line views/vresult/Simple.html:35
		tooltip := fmt.Sprintf(`%s: ordinal %d (%s)`, field.Key, fIdx, field.Type)

//line views/vresult/Simple.html:36
		components.StreamTableHeader(qw422016, "x", field.Key, field.Key, params, "", ps.URI, tooltip, false, "", true, ps)
//line views/vresult/Simple.html:37
	}
//line views/vresult/Simple.html:38
	vutil.StreamIndent(qw422016, true, indent+3)
//line views/vresult/Simple.html:38
	qw422016.N().S(`<th class="tfill"></th>`)
//line views/vresult/Simple.html:40
	vutil.StreamIndent(qw422016, true, indent+2)
//line views/vresult/Simple.html:40
	qw422016.N().S(`</tr>`)
//line views/vresult/Simple.html:42
	vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:42
	qw422016.N().S(`</thead>`)
//line views/vresult/Simple.html:44
	vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:44
	qw422016.N().S(`<tbody>`)
//line views/vresult/Simple.html:46
	for rIdx, row := range r.Data {
//line views/vresult/Simple.html:47
		streamsimpleRow(qw422016, rIdx, row, r.Fields, indent+2, showNum, params, as, ps)
//line views/vresult/Simple.html:48
	}
//line views/vresult/Simple.html:50
	if params.HasNextPage(r.Count) || params.HasPreviousPage() {
//line views/vresult/Simple.html:51
		vutil.StreamIndent(qw422016, true, indent+2)
//line views/vresult/Simple.html:51
		qw422016.N().S(`<tr><td colspan="`)
//line views/vresult/Simple.html:52
		qw422016.N().D(len(r.Fields) + 1)
//line views/vresult/Simple.html:52
		qw422016.N().S(`">`)
//line views/vresult/Simple.html:52
		components.StreamPagination(qw422016, r.Count, params, ps.URI)
//line views/vresult/Simple.html:52
		qw422016.N().S(`</td></tr>`)
//line views/vresult/Simple.html:53
	}
//line views/vresult/Simple.html:54
	vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:54
	qw422016.N().S(`</tbody>`)
//line views/vresult/Simple.html:56
	vutil.StreamIndent(qw422016, true, indent)
//line views/vresult/Simple.html:56
	qw422016.N().S(`</table>`)
//line views/vresult/Simple.html:58
}

//line views/vresult/Simple.html:58
func writesimpleTable(qq422016 qtio422016.Writer, r *result.Result, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:58
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vresult/Simple.html:58
	streamsimpleTable(qw422016, r, indent, showNum, params, as, ps)
//line views/vresult/Simple.html:58
	qt422016.ReleaseWriter(qw422016)
//line views/vresult/Simple.html:58
}

//line views/vresult/Simple.html:58
func simpleTable(r *result.Result, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) string {
//line views/vresult/Simple.html:58
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vresult/Simple.html:58
	writesimpleTable(qb422016, r, indent, showNum, params, as, ps)
//line views/vresult/Simple.html:58
	qs422016 := string(qb422016.B)
//line views/vresult/Simple.html:58
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vresult/Simple.html:58
	return qs422016
//line views/vresult/Simple.html:58
}

//line views/vresult/Simple.html:60
func streamsimpleRow(qw422016 *qt422016.Writer, idx int, row []any, fields field.Fields, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:61
	vutil.StreamIndent(qw422016, true, indent)
//line views/vresult/Simple.html:61
	qw422016.N().S(`<tr>`)
//line views/vresult/Simple.html:63
	if showNum {
//line views/vresult/Simple.html:64
		vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:64
		qw422016.N().S(`<th><em>`)
//line views/vresult/Simple.html:65
		qw422016.N().D(idx + 1)
//line views/vresult/Simple.html:65
		qw422016.N().S(`</em></th>`)
//line views/vresult/Simple.html:66
	}
//line views/vresult/Simple.html:68
	for fIdx, f := range fields {
//line views/vresult/Simple.html:69
		col := row[fIdx]

//line views/vresult/Simple.html:70
		vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:70
		qw422016.N().S(`<td>`)
//line views/vresult/Simple.html:71
		fieldview.StreamAny(qw422016, col, f.Type)
//line views/vresult/Simple.html:71
		qw422016.N().S(`</td>`)
//line views/vresult/Simple.html:72
	}
//line views/vresult/Simple.html:73
	vutil.StreamIndent(qw422016, true, indent+1)
//line views/vresult/Simple.html:73
	qw422016.N().S(`<td class="tfill"></td>`)
//line views/vresult/Simple.html:75
	vutil.StreamIndent(qw422016, true, indent)
//line views/vresult/Simple.html:75
	qw422016.N().S(`</tr>`)
//line views/vresult/Simple.html:77
}

//line views/vresult/Simple.html:77
func writesimpleRow(qq422016 qtio422016.Writer, idx int, row []any, fields field.Fields, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) {
//line views/vresult/Simple.html:77
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vresult/Simple.html:77
	streamsimpleRow(qw422016, idx, row, fields, indent, showNum, params, as, ps)
//line views/vresult/Simple.html:77
	qt422016.ReleaseWriter(qw422016)
//line views/vresult/Simple.html:77
}

//line views/vresult/Simple.html:77
func simpleRow(idx int, row []any, fields field.Fields, indent int, showNum bool, params *filter.Params, as *app.State, ps *cutil.PageState) string {
//line views/vresult/Simple.html:77
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vresult/Simple.html:77
	writesimpleRow(qb422016, idx, row, fields, indent, showNum, params, as, ps)
//line views/vresult/Simple.html:77
	qs422016 := string(qb422016.B)
//line views/vresult/Simple.html:77
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vresult/Simple.html:77
	return qs422016
//line views/vresult/Simple.html:77
}
