// Code generated by qtc from "Modules.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- Content managed by Project Forge, see [projectforge.md] for details. -->

//line views/vadmin/Modules.html:2
package vadmin

//line views/vadmin/Modules.html:2
import (
	"runtime/debug"

	"admini.dev/admini/app"
	"admini.dev/admini/app/controller/cutil"
	"admini.dev/admini/app/util"
	"admini.dev/admini/views/layout"
)

//line views/vadmin/Modules.html:11
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vadmin/Modules.html:11
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vadmin/Modules.html:11
type Modules struct {
	layout.Basic
	Info *util.DebugInfo
}

//line views/vadmin/Modules.html:16
func (p *Modules) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Modules.html:16
	qw422016.N().S(`
  `)
//line views/vadmin/Modules.html:17
	streambuildInfo(qw422016, p.Info.Tags, as)
//line views/vadmin/Modules.html:17
	qw422016.N().S(`
  `)
//line views/vadmin/Modules.html:18
	streammoduleList(qw422016, p.Info.Mods)
//line views/vadmin/Modules.html:18
	qw422016.N().S(`
`)
//line views/vadmin/Modules.html:19
}

//line views/vadmin/Modules.html:19
func (p *Modules) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vadmin/Modules.html:19
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Modules.html:19
	p.StreamBody(qw422016, as, ps)
//line views/vadmin/Modules.html:19
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Modules.html:19
}

//line views/vadmin/Modules.html:19
func (p *Modules) Body(as *app.State, ps *cutil.PageState) string {
//line views/vadmin/Modules.html:19
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Modules.html:19
	p.WriteBody(qb422016, as, ps)
//line views/vadmin/Modules.html:19
	qs422016 := string(qb422016.B)
//line views/vadmin/Modules.html:19
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Modules.html:19
	return qs422016
//line views/vadmin/Modules.html:19
}

//line views/vadmin/Modules.html:21
func streambuildInfo(qw422016 *qt422016.Writer, tags *util.OrderedMap, as *app.State) {
//line views/vadmin/Modules.html:21
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vadmin/Modules.html:23
	qw422016.E().S(util.AppName)
//line views/vadmin/Modules.html:23
	qw422016.N().S(` v`)
//line views/vadmin/Modules.html:23
	qw422016.E().S(as.BuildInfo.Version)
//line views/vadmin/Modules.html:23
	qw422016.N().S(`</h3>
    <ul class="mt">
`)
//line views/vadmin/Modules.html:25
	for _, k := range tags.Order {
//line views/vadmin/Modules.html:25
		qw422016.N().S(`      <li><strong>`)
//line views/vadmin/Modules.html:26
		qw422016.E().S(k)
//line views/vadmin/Modules.html:26
		qw422016.N().S(`</strong>: `)
//line views/vadmin/Modules.html:26
		qw422016.E().S(tags.GetSimple(k).(string))
//line views/vadmin/Modules.html:26
		qw422016.N().S(`</li>
`)
//line views/vadmin/Modules.html:27
	}
//line views/vadmin/Modules.html:27
	qw422016.N().S(`    </ul>
  </div>
`)
//line views/vadmin/Modules.html:30
}

//line views/vadmin/Modules.html:30
func writebuildInfo(qq422016 qtio422016.Writer, tags *util.OrderedMap, as *app.State) {
//line views/vadmin/Modules.html:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Modules.html:30
	streambuildInfo(qw422016, tags, as)
//line views/vadmin/Modules.html:30
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Modules.html:30
}

//line views/vadmin/Modules.html:30
func buildInfo(tags *util.OrderedMap, as *app.State) string {
//line views/vadmin/Modules.html:30
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Modules.html:30
	writebuildInfo(qb422016, tags, as)
//line views/vadmin/Modules.html:30
	qs422016 := string(qb422016.B)
//line views/vadmin/Modules.html:30
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Modules.html:30
	return qs422016
//line views/vadmin/Modules.html:30
}

//line views/vadmin/Modules.html:32
func streammoduleList(qw422016 *qt422016.Writer, Mods []*debug.Module) {
//line views/vadmin/Modules.html:32
	qw422016.N().S(`
  <div class="card">
    <h3>Go Modules</h3>
    <table class="mt">
      <thead>
        <tr>
          <th>Name</th>
          <th>Version</th>
        </tr>
      </thead>
      <tbody>
`)
//line views/vadmin/Modules.html:43
	for _, m := range Mods {
//line views/vadmin/Modules.html:43
		qw422016.N().S(`        <tr>
          <td><a target="_blank" rel="noopener noreferrer" href="https://`)
//line views/vadmin/Modules.html:45
		qw422016.E().S(m.Path)
//line views/vadmin/Modules.html:45
		qw422016.N().S(`">`)
//line views/vadmin/Modules.html:45
		qw422016.E().S(m.Path)
//line views/vadmin/Modules.html:45
		qw422016.N().S(`</a></td>
          <td title="`)
//line views/vadmin/Modules.html:46
		qw422016.E().S(m.Sum)
//line views/vadmin/Modules.html:46
		qw422016.N().S(`">`)
//line views/vadmin/Modules.html:46
		qw422016.E().S(m.Version)
//line views/vadmin/Modules.html:46
		qw422016.N().S(`</td>
        </tr>
`)
//line views/vadmin/Modules.html:48
	}
//line views/vadmin/Modules.html:48
	qw422016.N().S(`      </tbody>
    </table>
  </div>
`)
//line views/vadmin/Modules.html:52
}

//line views/vadmin/Modules.html:52
func writemoduleList(qq422016 qtio422016.Writer, Mods []*debug.Module) {
//line views/vadmin/Modules.html:52
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vadmin/Modules.html:52
	streammoduleList(qw422016, Mods)
//line views/vadmin/Modules.html:52
	qt422016.ReleaseWriter(qw422016)
//line views/vadmin/Modules.html:52
}

//line views/vadmin/Modules.html:52
func moduleList(Mods []*debug.Module) string {
//line views/vadmin/Modules.html:52
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vadmin/Modules.html:52
	writemoduleList(qb422016, Mods)
//line views/vadmin/Modules.html:52
	qs422016 := string(qb422016.B)
//line views/vadmin/Modules.html:52
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vadmin/Modules.html:52
	return qs422016
//line views/vadmin/Modules.html:52
}
